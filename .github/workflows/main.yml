name: Build and Manual Release

on:
  workflow_dispatch:
    inputs:
      release_tag:
        description: 'Release tag (defaults to pre-release)'
        required: false
        type: string

jobs:
  build-and-test:
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest]
        name: ["macos", "linux"]
        exclude:
        - os: macos-latest
          name: linux
        - os: ubuntu-latest
          name: macos
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version-file: 'go.mod'

      - uses: actions/setup-python@v5
        with:
          python-version: '3.13' 

      - name: Install deps
        run: make dep-install
      
      - name: Build project
        run: make all
      
      - name: Run tests
        run: go test ./...

      - name: tar build
        run: tar -czvf ${{ matrix.name }}.tar.gz -C ./build .
      
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.name }}-build-artifacts
          path: ./${{ matrix.name }}.tar.gz
          retention-days: 1

  create-manual-release:
    needs: build-and-test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download macos build artifacts
        uses: actions/download-artifact@v4

      - name: Set release tag
        id: set_tag
        run: |
          if [ -n "${{ github.event.inputs.release_tag }}" ]; then
            echo "tag=${{ github.event.inputs.release_tag }}" >> $GITHUB_OUTPUT
          else
            echo "tag=pre-release" >> $GITHUB_OUTPUT
          fi
      
      - name: Delete existing manual release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          TAG="${{ steps.set_tag.outputs.tag }}"
          # Delete the release if it exists
          gh release delete "$TAG" --yes || true
          # Delete the tag if it exists
          git push --delete origin "$TAG" || true
        continue-on-error: true
      
      - name: Create manual release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          TAG="${{ steps.set_tag.outputs.tag }}"
          
          # Create the release with all files from build directory
          gh release create "$TAG" \
            --title "Pre Release - $(date +'%Y-%m-%d %H:%M:%S UTC')" \
            --notes "Manual build from commit ${{ github.sha }}" \
            --prerelease \
            ./linux-build-artifacts/linux.tar.gz \
            ./macos-build-artifacts/macos.tar.gz
